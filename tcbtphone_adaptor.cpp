/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i tcbtphone_adaptor.h -a :tcbtphone_adaptor.cpp ../dbus_xml_config/Semisky.BlueToothMidware.TcBtPhone.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "tcbtphone_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class TcBtPhoneAdaptor
 */

TcBtPhoneAdaptor::TcBtPhoneAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

TcBtPhoneAdaptor::~TcBtPhoneAdaptor()
{
    // destructor
}

void TcBtPhoneAdaptor::cmdChangeVoiceMode()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdChangeVoiceMode
    QMetaObject::invokeMethod(parent(), "cmdChangeVoiceMode");
}

void TcBtPhoneAdaptor::cmdDialByName(const QString &contactName, int numSize)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdDialByName
    QMetaObject::invokeMethod(parent(), "cmdDialByName", Q_ARG(QString, contactName), Q_ARG(int, numSize));
}

void TcBtPhoneAdaptor::cmdDialByNum(const QString &contactPhNum, int numSize)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdDialByNum
    QMetaObject::invokeMethod(parent(), "cmdDialByNum", Q_ARG(QString, contactPhNum), Q_ARG(int, numSize));
}

void TcBtPhoneAdaptor::cmdEndCal()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdEndCal
    QMetaObject::invokeMethod(parent(), "cmdEndCal");
}

void TcBtPhoneAdaptor::cmdHangUp()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdHangUp
    QMetaObject::invokeMethod(parent(), "cmdHangUp");
}

void TcBtPhoneAdaptor::cmdIncomingAnswer()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdIncomingAnswer
    QMetaObject::invokeMethod(parent(), "cmdIncomingAnswer");
}

void TcBtPhoneAdaptor::cmdIncomingReject()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdIncomingReject
    QMetaObject::invokeMethod(parent(), "cmdIncomingReject");
}

void TcBtPhoneAdaptor::cmdNumBtnClicked(int Num)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdNumBtnClicked
    QMetaObject::invokeMethod(parent(), "cmdNumBtnClicked", Q_ARG(int, Num));
}

void TcBtPhoneAdaptor::cmdOpenPhoneAudio()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdOpenPhoneAudio
    QMetaObject::invokeMethod(parent(), "cmdOpenPhoneAudio");
}

void TcBtPhoneAdaptor::cmdReDial()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdReDial
    QMetaObject::invokeMethod(parent(), "cmdReDial");
}

void TcBtPhoneAdaptor::cmdSetVoiceMute()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdSetVoiceMute
    QMetaObject::invokeMethod(parent(), "cmdSetVoiceMute");
}

void TcBtPhoneAdaptor::cmdStartIncomingCall()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdStartIncomingCall
    QMetaObject::invokeMethod(parent(), "cmdStartIncomingCall");
}

void TcBtPhoneAdaptor::cmdStartOutgoingCall()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdStartOutgoingCall
    QMetaObject::invokeMethod(parent(), "cmdStartOutgoingCall");
}

void TcBtPhoneAdaptor::cmdVoiceRecognition()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.cmdVoiceRecognition
    QMetaObject::invokeMethod(parent(), "cmdVoiceRecognition");
}

void TcBtPhoneAdaptor::deviceAllDelete()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceAllDelete
    QMetaObject::invokeMethod(parent(), "deviceAllDelete");
}

void TcBtPhoneAdaptor::deviceCompareornot(bool bAccept)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceCompareornot
    QMetaObject::invokeMethod(parent(), "deviceCompareornot", Q_ARG(bool, bAccept));
}

void TcBtPhoneAdaptor::deviceConnect(int DeviceNum)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceConnect
    QMetaObject::invokeMethod(parent(), "deviceConnect", Q_ARG(int, DeviceNum));
}

void TcBtPhoneAdaptor::deviceDelete(int DeviceNum)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceDelete
    QMetaObject::invokeMethod(parent(), "deviceDelete", Q_ARG(int, DeviceNum));
}

void TcBtPhoneAdaptor::deviceDisconnect(int DeviceNum)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceDisconnect
    QMetaObject::invokeMethod(parent(), "deviceDisconnect", Q_ARG(int, DeviceNum));
}

void TcBtPhoneAdaptor::deviceSearchCancel()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceSearchCancel
    QMetaObject::invokeMethod(parent(), "deviceSearchCancel");
}

void TcBtPhoneAdaptor::deviceSearchStart(int totalSearchTime, int maxDevices)
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.deviceSearchStart
    QMetaObject::invokeMethod(parent(), "deviceSearchStart", Q_ARG(int, totalSearchTime), Q_ARG(int, maxDevices));
}

void TcBtPhoneAdaptor::getContactInfo()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.getContactInfo
    QMetaObject::invokeMethod(parent(), "getContactInfo");
}

void TcBtPhoneAdaptor::getHistoryCalInfo()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.getHistoryCalInfo
    QMetaObject::invokeMethod(parent(), "getHistoryCalInfo");
}

void TcBtPhoneAdaptor::sysActivate()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.sysActivate
    QMetaObject::invokeMethod(parent(), "sysActivate");
}

void TcBtPhoneAdaptor::sysDeactivate()
{
    // handle method call smk.tcc8971.BlueToothMidware.TcBtPhone.sysDeactivate
    QMetaObject::invokeMethod(parent(), "sysDeactivate");
}

